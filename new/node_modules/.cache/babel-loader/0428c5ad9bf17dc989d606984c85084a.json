{"ast":null,"code":"var _jsxFileName = \"/Users/isaacminogue/Projects/lectionary/src/Toggle.tsx\";\nimport { styled } from './stitches.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Track = styled('div', {\n  display: 'flex',\n  background: '$toggleBase',\n  borderRadius: '999px',\n  width: '196px',\n  zIndex: '0',\n  position: 'relative',\n  alignItems: 'center',\n  margin: '20px',\n  height: '36px',\n  padding: '2px'\n});\n_c = Track;\nexport const Thumb = styled('div', {\n  boxSizing: 'border-box',\n  content: '',\n  display: 'block',\n  width: '98px',\n  height: '36px',\n  left: '2px',\n  position: 'absolute',\n  borderRadius: '999px',\n  zIndex: '1',\n  background: '$toggleCheckedBase',\n  transition: 'all 0.1s ease'\n});\n_c2 = Thumb;\nconst Label = styled('label', {\n  width: '98px',\n  borderRadius: '999px',\n  height: '36px',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  lineHeight: '20px',\n  cursor: 'pointer',\n  background: 'transparent',\n  color: '$foreground',\n  transition: 'all 0.1s ease',\n  userSelect: 'none',\n  position: 'relative',\n  zIndex: '2',\n  '&:before': {\n    content: '',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    left: '0px',\n    top: '0px',\n    position: 'absolute',\n    borderRadius: '999px',\n    pointerEvents: 'none',\n    zIndex: '-1',\n    background: 'transparent'\n  },\n  '&:hover:before, &:focus:before': {\n    background: '$toggleStage'\n  },\n  '&:active:before': {\n    background: '$toggleSelect'\n  }\n});\n_c3 = Label;\nconst Input = styled('input', {\n  opacity: '0',\n  width: '0',\n  height: '0',\n  position: 'absolute',\n  [`&:checked + ${Label}`]: {\n    color: '$background'\n  },\n  [`&:checked + ${Label}:hover:before`]: {\n    background: '$toggleCheckedStage'\n  },\n  [`&:checked + ${Label}:focus:before`]: {\n    background: '$toggleCheckedStage'\n  },\n  [`&:checked + ${Label}:active:before`]: {\n    background: '$toggleCheckedSelect'\n  },\n  [`&:checked:nth-of-type(2) ~ ${Thumb}`]: {\n    left: '100px'\n  }\n});\n_c4 = Input;\nconst Item = styled('div', {});\n_c5 = Item;\n\nconst Toggle = ({\n  options,\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(Track, {\n    children: [options.map(item => {\n      const checked = item.value === value;\n      return /*#__PURE__*/_jsxDEV(Item, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"for-\" + item.value,\n          type: \"radio\",\n          name: \"id-\" + Math.random(),\n          value: item.value,\n          checked: checked,\n          onChange: e => {\n            return e.target.checked && onChange(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"for-\" + item.value,\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, item.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Thumb, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_c6 = Toggle;\nexport default Toggle;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Track\");\n$RefreshReg$(_c2, \"Thumb\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Item\");\n$RefreshReg$(_c6, \"Toggle\");","map":{"version":3,"sources":["/Users/isaacminogue/Projects/lectionary/src/Toggle.tsx"],"names":["styled","Track","display","background","borderRadius","width","zIndex","position","alignItems","margin","height","padding","Thumb","boxSizing","content","left","transition","Label","justifyContent","lineHeight","cursor","color","userSelect","top","pointerEvents","Input","opacity","Item","Toggle","options","value","onChange","map","item","checked","Math","random","e","target"],"mappings":"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","sourcesContent":["import { styled } from './stitches.config';\n\nexport const Track = styled('div', {\n    display: 'flex',\n    background: '$toggleBase',\n    borderRadius: '999px',\n    width: '196px',\n    zIndex: '0',\n    position: 'relative',\n    alignItems: 'center',\n    margin: '20px',\n    height: '36px',\n    padding: '2px',\n});\n\nexport const Thumb = styled('div', {\n    boxSizing: 'border-box',\n    content: '',\n    display: 'block',\n    width: '98px',\n    height: '36px',\n    left: '2px',\n    position: 'absolute',\n    borderRadius: '999px',\n    zIndex: '1',\n    background: '$toggleCheckedBase',\n    transition: 'all 0.1s ease',\n});\n\n\n\nconst Label = styled('label', {\n    width: '98px',\n    borderRadius: '999px',\n    height: '36px',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    lineHeight: '20px',\n    cursor: 'pointer',\n    background: 'transparent',\n    color: '$foreground',\n    transition: 'all 0.1s ease',\n    userSelect: 'none',\n    position: 'relative',\n    zIndex: '2',\n    '&:before': {\n        content: '',\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        left: '0px',\n        top: '0px',\n        position: 'absolute',\n        borderRadius: '999px',\n        pointerEvents: 'none',\n        zIndex: '-1',\n        background: 'transparent',\n    },\n    '&:hover:before, &:focus:before': {\n        background: '$toggleStage',\n    },\n    '&:active:before': {\n        background: '$toggleSelect',\n    },\n})\n\nconst Input = styled('input', {\n    opacity: '0',\n    width: '0',\n    height: '0',\n    position: 'absolute',\n    [`&:checked + ${Label}`]: {\n        color: '$background',\n    },\n    [`&:checked + ${Label}:hover:before`]: {\n        background: '$toggleCheckedStage',\n    },\n    [`&:checked + ${Label}:focus:before`]: {\n        background: '$toggleCheckedStage', \n    },\n    [`&:checked + ${Label}:active:before`]: {\n        background: '$toggleCheckedSelect',\n    },\n    [`&:checked:nth-of-type(2) ~ ${Thumb}`]: {\n        left: '100px',\n    }\n})\n\n\nconst Item = styled('div', {})\n\ninterface ToggleProps {\n    onChange: (value: string) => void;\n    value: string;\n    options: { value: string; content: string }[];\n}\n\nconst Toggle = ({ options, value, onChange }: ToggleProps) => {\n    return (\n        <Track>\n            {options.map((item) => {\n                const checked = item.value === value;\n                return (\n                    <Item key={item.value}>\n                        <Input\n                            id={\"for-\" + item.value}\n                            type=\"radio\"\n                            name={\"id-\" + Math.random()}\n                            value={item.value}\n                            checked={checked}\n                            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                                return e.target.checked && onChange(e.target.value);\n                            }}\n                        />\n                        <Label htmlFor={\"for-\" + item.value}>\n                            {item.content}\n                        </Label>\n                    </Item>\n                    );\n                })}\n            {/* TODO */}\n            <Thumb></Thumb>\n        </Track>\n    )\n}\n  \nexport default Toggle;"]},"metadata":{},"sourceType":"module"}