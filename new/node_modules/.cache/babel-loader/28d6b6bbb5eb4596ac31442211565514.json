{"ast":null,"code":"var _jsxFileName = \"/Users/isaacminogue/Projects/lectionary/src/Button.tsx\";\nimport React from 'react';\nimport { styled } from './stitches.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StyledButton = styled('button', {\n  // These are the styles that apply to all buttons\n  borderRadius: '9999px',\n  border: 'none',\n  cursor: 'pointer',\n  outline: 'none',\n  fontFamily: 'inherit',\n  // Variants are subsets of the component\n  variants: {\n    // You can name variants whatever you want\n    size: {\n      small: {\n        padding: '5px 15px',\n        fontSize: '14px',\n        lineHeight: '20px'\n      },\n      large: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        lineHeight: '20px'\n      }\n    },\n    // You can have as many variants as you like\n    type: {\n      primary: {\n        // Dollar symbols are variables defined in stiches.config.ts\n        backgroundColor: '$foreground',\n        color: '$background',\n        '&:hover, &:focus': {\n          backgroundColor: '$foreground',\n          backgroundImage: 'linear-gradient($toggleCheckedStage, $toggleCheckedStage)'\n        },\n        '&:active': {\n          backgroundColor: '$foreground',\n          backgroundImage: 'linear-gradient($toggleCheckedSelect, $toggleCheckedSelect)'\n        }\n      },\n      secondary: {\n        backgroundColor: '$toggleBase',\n        color: '$foreground',\n        '&:hover, &:focus': {\n          backgroundColor: '$toggleBase',\n          backgroundImage: 'linear-gradient($toggleStage, $toggleStage)'\n        },\n        '&:active': {\n          backgroundColor: '$toggleBase',\n          backgroundImage: 'linear-gradient($toggleSelect, $toggleSelect)'\n        }\n      }\n    }\n  },\n  // Default variants for button when nothing is declared\n  defaultVariants: {\n    type: 'primary',\n    size: 'large'\n  }\n});\n_c = StyledButton;\n\nconst Button = buttonText => {\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    value: value,\n    onClick: () => console.log('hello' + value),\n    children: \"Button\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Button;\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/Users/isaacminogue/Projects/lectionary/src/Button.tsx"],"names":["React","styled","StyledButton","borderRadius","border","cursor","outline","fontFamily","variants","size","small","padding","fontSize","lineHeight","large","type","primary","backgroundColor","color","backgroundImage","secondary","defaultVariants","Button","buttonText","value","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,OAAO,MAAMC,YAAY,GAAGD,MAAM,CAAC,QAAD,EAAW;AAC3C;AACAE,EAAAA,YAAY,EAAE,QAF6B;AAG3CC,EAAAA,MAAM,EAAE,MAHmC;AAI3CC,EAAAA,MAAM,EAAE,SAJmC;AAK3CC,EAAAA,OAAO,EAAE,MALkC;AAM3CC,EAAAA,UAAU,EAAE,SAN+B;AAQ3C;AACAC,EAAAA,QAAQ,EAAE;AAER;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,UADJ;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,UAAU,EAAE;AAHP,OADH;AAMJC,MAAAA,KAAK,EAAE;AACLH,QAAAA,OAAO,EAAE,WADJ;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,UAAU,EAAE;AAHP;AANH,KAHE;AAgBR;AACAE,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AACP;AACAC,QAAAA,eAAe,EAAE,aAFV;AAGPC,QAAAA,KAAK,EAAE,aAHA;AAIP,4BAAoB;AAClBD,UAAAA,eAAe,EAAE,aADC;AAElBE,UAAAA,eAAe,EAAE;AAFC,SAJb;AAQP,oBAAY;AACVF,UAAAA,eAAe,EAAE,aADP;AAEVE,UAAAA,eAAe,EAAE;AAFP;AARL,OADL;AAcJC,MAAAA,SAAS,EAAE;AACTH,QAAAA,eAAe,EAAE,aADR;AAETC,QAAAA,KAAK,EAAE,aAFE;AAGT,4BAAoB;AAClBD,UAAAA,eAAe,EAAE,aADC;AAElBE,UAAAA,eAAe,EAAE;AAFC,SAHX;AAOT,oBAAY;AACVF,UAAAA,eAAe,EAAE,aADP;AAEVE,UAAAA,eAAe,EAAE;AAFP;AAPH;AAdP;AAjBE,GATiC;AAsD3C;AACAE,EAAAA,eAAe,EAAE;AACfN,IAAAA,IAAI,EAAE,SADS;AAEfN,IAAAA,IAAI,EAAE;AAFS;AAvD0B,CAAX,CAA3B;KAAMP,Y;;AA6Db,MAAMoB,MAAM,GAAIC,UAAD,IAAwB;AACrC,sBACE,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,KAArB;AAA4B,IAAA,OAAO,EAAE,MAAKC,OAAO,CAACC,GAAR,CAAY,UAAUF,KAAtB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMF,M;AAMN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { styled } from './stitches.config';\n\nexport const StyledButton = styled('button', {\n  // These are the styles that apply to all buttons\n  borderRadius: '9999px',\n  border: 'none',\n  cursor: 'pointer',\n  outline: 'none',\n  fontFamily: 'inherit',\n\n  // Variants are subsets of the component\n  variants: {\n\n    // You can name variants whatever you want\n    size: {\n      small: {\n        padding: '5px 15px',\n        fontSize: '14px',\n        lineHeight: '20px',\n      },\n      large: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        lineHeight: '20px',\n      },\n    },\n\n    // You can have as many variants as you like\n    type: {\n      primary: {\n        // Dollar symbols are variables defined in stiches.config.ts\n        backgroundColor: '$foreground',\n        color: '$background',\n        '&:hover, &:focus': {\n          backgroundColor: '$foreground',\n          backgroundImage: 'linear-gradient($toggleCheckedStage, $toggleCheckedStage)',\n        },\n        '&:active': {\n          backgroundColor: '$foreground',\n          backgroundImage: 'linear-gradient($toggleCheckedSelect, $toggleCheckedSelect)',\n        },\n      },\n      secondary: {\n        backgroundColor: '$toggleBase',\n        color: '$foreground',\n        '&:hover, &:focus': {\n          backgroundColor: '$toggleBase',\n          backgroundImage: 'linear-gradient($toggleStage, $toggleStage)',\n        },\n        '&:active': {\n          backgroundColor: '$toggleBase',\n          backgroundImage: 'linear-gradient($toggleSelect, $toggleSelect)',\n        },\n      },\n    },\n  },\n  // Default variants for button when nothing is declared\n  defaultVariants: {\n    type: 'primary',\n    size: 'large',\n  }\n});\n\nconst Button = (buttonText: string) => {\n  return( \n    <StyledButton value={value} onClick={()=> console.log('hello' + value)}>Button</StyledButton>\n  )\n}\n  \nexport default Button;"]},"metadata":{},"sourceType":"module"}