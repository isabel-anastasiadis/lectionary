{"ast":null,"code":"var _jsxFileName = \"/Users/isaacminogue/Projects/lectionary/src/Toggle.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { styled } from './stitches.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Track = styled('div', {\n  display: 'inline-flex',\n  background: '$toggleBase',\n  borderRadius: '999px',\n  padding: '2px',\n  width: '200px',\n  zIndex: '0',\n  position: 'relative'\n});\n_c = Track;\nexport const Thumb = styled('div', {\n  boxSizing: 'border-box',\n  content: '',\n  display: 'block',\n  width: '98px',\n  height: '36px',\n  left: '2px',\n  top: '2px',\n  position: 'absolute',\n  borderRadius: '999px',\n  zIndex: '1',\n  background: '$toggleCheckedBase',\n  transition: 'all 0.1s ease',\n  // TODO\n  ':checked:nth-of-type(2) ~ &': {\n    left: '100px'\n  }\n});\n_c2 = Thumb;\nconst Input = styled('input', {\n  opacity: '0',\n  width: '0',\n  height: '0',\n  position: 'absolute'\n});\n_c3 = Input;\nconst Label = styled('label', {\n  width: '98px',\n  borderRadius: '999px',\n  //TODO\n  padding: '5px 15px',\n  height: '36px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  lineHeight: '20px',\n  cursor: 'pointer',\n  background: 'transparent',\n  color: '$foreground',\n  transition: 'all 0.1s ease',\n  userSelect: 'none',\n  position: 'relative',\n  zIndex: '2',\n  '&:before': {\n    content: '',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    left: '0px',\n    top: '0px',\n    position: 'absolute',\n    borderRadius: '999px',\n    pointerEvents: 'none',\n    zIndex: '-1',\n    background: 'transparent'\n  },\n  '&:hover:before, &:focus:before': {\n    background: '$toggleStage'\n  },\n  '&:active:before': {\n    background: '$toggleSelect'\n  },\n  ':checked + &': {\n    color: '$background'\n  },\n  ':checked + &:hover:before, :checked + &:focus:before': {\n    background: '$toggleCheckedStage'\n  },\n  ':checked + &:active:before': {\n    background: '$toggleCheckedSelect'\n  }\n});\n_c4 = Label;\nconst Item = styled('div', {});\n_c5 = Item;\n\nconst Toggle = ({\n  options,\n  value,\n  onChange\n}) => {\n  _s();\n\n  const ref = useRef(\"id-\" + Math.random());\n  return /*#__PURE__*/_jsxDEV(Track, {\n    children: [options.map(item => {\n      const checked = item.value === value;\n      return /*#__PURE__*/_jsxDEV(Item, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"for-\" + item.value,\n          type: \"radio\",\n          name: ref.current,\n          value: item.value,\n          checked: checked,\n          onChange: e => {\n            return e.target.checked && onChange(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"for-\" + item.value,\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, item.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Thumb, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Toggle, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c6 = Toggle;\nexport default Toggle;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Track\");\n$RefreshReg$(_c2, \"Thumb\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"Item\");\n$RefreshReg$(_c6, \"Toggle\");","map":{"version":3,"sources":["/Users/isaacminogue/Projects/lectionary/src/Toggle.tsx"],"names":["useRef","styled","Track","display","background","borderRadius","padding","width","zIndex","position","Thumb","boxSizing","content","height","left","top","transition","Input","opacity","Label","alignItems","justifyContent","lineHeight","cursor","color","userSelect","pointerEvents","Item","Toggle","options","value","onChange","ref","Math","random","map","item","checked","current","e","target"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from 'react';\nimport { styled } from './stitches.config';\n\nexport const Track = styled('div', {\n    display: 'inline-flex',\n    background: '$toggleBase',\n    borderRadius: '999px',\n    padding: '2px',\n    width: '200px',\n    zIndex: '0',\n    position: 'relative',\n});\n\nexport const Thumb = styled('div', {\n    boxSizing: 'border-box',\n    content: '',\n    display: 'block',\n    width: '98px',\n    height: '36px',\n    left: '2px',\n    top: '2px',\n    position: 'absolute',\n    borderRadius: '999px',\n    zIndex: '1',\n    background: '$toggleCheckedBase',\n    transition: 'all 0.1s ease',\n    // TODO\n    ':checked:nth-of-type(2) ~ &': {\n        left: '100px',\n    }\n});\n\nconst Input = styled('input', {\n    opacity: '0',\n    width: '0',\n    height: '0',\n    position: 'absolute',\n})\n\n\nconst Label = styled('label', {\n    width: '98px',\n    borderRadius: '999px',\n    //TODO\n    padding: '5px 15px',\n    height: '36px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    lineHeight: '20px',\n    cursor: 'pointer',\n    background: 'transparent',\n    color: '$foreground',\n    transition: 'all 0.1s ease',\n    userSelect: 'none',\n    position: 'relative',\n    zIndex: '2',\n    '&:before': {\n        content: '',\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        left: '0px',\n        top: '0px',\n        position: 'absolute',\n        borderRadius: '999px',\n        pointerEvents: 'none',\n        zIndex: '-1',\n        background: 'transparent',\n    },\n    '&:hover:before, &:focus:before': {\n        background: '$toggleStage',\n    },\n    '&:active:before': {\n        background: '$toggleSelect',\n    },\n    ':checked + &': {\n        color: '$background',\n    },\n    ':checked + &:hover:before, :checked + &:focus:before': {\n        background: '$toggleCheckedStage',\n    },\n    ':checked + &:active:before': {\n        background: '$toggleCheckedSelect',\n    },\n})\n\nconst Item = styled('div', {})\n\ninterface ToggleProps {\n    onChange: (value: string) => void;\n    value: string;\n    options: { value: string; content: string }[];\n}\n\nconst Toggle = ({ options, value, onChange }: ToggleProps) => {\n    const ref = useRef(\"id-\" + Math.random());\n\n    return (\n        <Track>\n            {options.map((item) => {\n                const checked = item.value === value;\n                return (\n                    <Item key={item.value}>\n                        <Input\n                        id={\"for-\" + item.value}\n                        type=\"radio\"\n                        name={ref.current}\n                        value={item.value}\n                        checked={checked}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                            return e.target.checked && onChange(e.target.value);\n                        }}\n                        />\n                        <Label htmlFor={\"for-\" + item.value}>\n                        {item.content}\n                        </Label>\n                    </Item>\n                    );\n                })}\n            {/* TODO */}\n            <Thumb></Thumb>\n        </Track>\n    )\n}\n  \nexport default Toggle;"]},"metadata":{},"sourceType":"module"}