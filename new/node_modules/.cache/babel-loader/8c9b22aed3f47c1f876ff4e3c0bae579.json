{"ast":null,"code":"var _jsxFileName = \"/Users/isaacminogue/Projects/daily/new/src/Toggle.tsx\";\nimport { styled } from './stitches.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Track = styled('div', {\n  display: 'inline-flex',\n  background: '$toggleBase',\n  borderRadius: '999px',\n  zIndex: '0',\n  position: 'relative',\n  alignItems: 'center',\n  height: '40px',\n  padding: '2px'\n});\n_c = Track;\nconst Thumb = styled('div', {\n  boxSizing: 'border-box',\n  content: '',\n  display: 'block',\n  width: '98px',\n  height: '36px',\n  marginLeft: '2px',\n  top: '2px',\n  position: 'absolute',\n  borderRadius: '999px',\n  zIndex: '1',\n  background: '$toggleCheckedBase',\n  transition: 'all 0.1s ease'\n});\n_c2 = Thumb;\nconst Label = styled('label', {\n  width: '98px',\n  borderRadius: '999px',\n  height: '36px',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  lineHeight: '20px',\n  cursor: 'pointer',\n  background: 'transparent',\n  color: '$foreground',\n  transition: 'all 0.1s ease',\n  userSelect: 'none',\n  position: 'relative',\n  zIndex: '2',\n  '&:before': {\n    content: '',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    left: '0px',\n    top: '0px',\n    position: 'absolute',\n    borderRadius: '999px',\n    pointerEvents: 'none',\n    zIndex: '-1',\n    background: 'transparent'\n  },\n  '&:hover:before, &:focus:before': {\n    background: '$toggleStage'\n  },\n  '&:active:before': {\n    background: '$toggleSelect'\n  }\n});\n_c3 = Label;\nconst Input = styled('input', {\n  opacity: '0',\n  width: '0',\n  height: '0',\n  position: 'absolute',\n  [`&:checked + ${Label}`]: {\n    color: '$background'\n  },\n  [`&:checked + ${Label}:hover:before`]: {\n    background: '$toggleCheckedStage'\n  },\n  [`&:checked + ${Label}:focus:before`]: {\n    background: '$toggleCheckedStage'\n  },\n  [`&:checked + ${Label}:active:before`]: {\n    background: '$toggleCheckedSelect'\n  },\n  [`&:checked:nth-of-type(2) ~ ${Thumb}`]: {\n    left: '100px'\n  }\n});\n_c4 = Input;\n\nconst Toggle = ({\n  options,\n  selected,\n  onChange\n}) => {\n  const trackWidth = options.length * 98 + 'px';\n  const leftOffset = options.findIndex(item => item.value === selected) * 98 + 'px';\n  return /*#__PURE__*/_jsxDEV(Track, {\n    css: {\n      width: trackWidth\n    },\n    children: [options.map(item => {\n      const checked = item.value === selected;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"for-\" + item.value,\n          type: \"radio\",\n          name: \"id-\" + Math.random(),\n          value: item.value,\n          checked: checked,\n          onChange: e => {\n            return e.target.checked && onChange(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"for-\" + item.value,\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, item.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Thumb, {\n      css: {\n        left: leftOffset\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = Toggle;\nexport default Toggle;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Track\");\n$RefreshReg$(_c2, \"Thumb\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Toggle\");","map":{"version":3,"sources":["/Users/isaacminogue/Projects/daily/new/src/Toggle.tsx"],"names":["styled","Track","display","background","borderRadius","zIndex","position","alignItems","height","padding","Thumb","boxSizing","content","width","marginLeft","top","transition","Label","justifyContent","lineHeight","cursor","color","userSelect","left","pointerEvents","Input","opacity","Toggle","options","selected","onChange","trackWidth","length","leftOffset","findIndex","item","value","map","checked","Math","random","e","target"],"mappings":"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","sourcesContent":["import { styled } from './stitches.config';\n\nconst Track = styled('div', {\n    display: 'inline-flex',\n    background: '$toggleBase',\n    borderRadius: '999px',\n    zIndex: '0',\n    position: 'relative',\n    alignItems: 'center',\n    height: '40px',\n    padding: '2px',\n});\n\nconst Thumb = styled('div', {\n    boxSizing: 'border-box',\n    content: '',\n    display: 'block',\n    width: '98px',\n    height: '36px',\n    marginLeft: '2px',\n    top: '2px',\n    position: 'absolute',\n    borderRadius: '999px',\n    zIndex: '1',\n    background: '$toggleCheckedBase',\n    transition: 'all 0.1s ease',\n});\n\nconst Label = styled('label', {\n    width: '98px',\n    borderRadius: '999px',\n    height: '36px',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    lineHeight: '20px',\n    cursor: 'pointer',\n    background: 'transparent',\n    color: '$foreground',\n    transition: 'all 0.1s ease',\n    userSelect: 'none',\n    position: 'relative',\n    zIndex: '2',\n    '&:before': {\n        content: '',\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        left: '0px',\n        top: '0px',\n        position: 'absolute',\n        borderRadius: '999px',\n        pointerEvents: 'none',\n        zIndex: '-1',\n        background: 'transparent',\n    },\n    '&:hover:before, &:focus:before': {\n        background: '$toggleStage',\n    },\n    '&:active:before': {\n        background: '$toggleSelect',\n    },\n})\n\nconst Input = styled('input', {\n    opacity: '0',\n    width: '0',\n    height: '0',\n    position: 'absolute',\n    [`&:checked + ${Label}`]: {\n        color: '$background',\n    },\n    [`&:checked + ${Label}:hover:before`]: {\n        background: '$toggleCheckedStage',\n    },\n    [`&:checked + ${Label}:focus:before`]: {\n        background: '$toggleCheckedStage', \n    },\n    [`&:checked + ${Label}:active:before`]: {\n        background: '$toggleCheckedSelect',\n    },\n    [`&:checked:nth-of-type(2) ~ ${Thumb}`]: {\n        left: '100px',\n    }\n})\n\n\ninterface ToggleProps {\n    onChange: (value: string) => void;\n    selected: string;\n    options: { value: string; content: string }[];\n}\n\nconst Toggle = ({ options, selected, onChange }: ToggleProps) => {\n    const trackWidth = ((options.length) * 98) + 'px';\n    const leftOffset = options.findIndex(item => item.value === selected) * 98 + 'px';\n    return (\n        <Track css={{width: trackWidth}}>\n            {options.map((item) => {\n                const checked = item.value === selected;\n                return (\n                    <div key={item.value}>\n                        <Input\n                            id={\"for-\" + item.value}\n                            type=\"radio\"\n                            name={\"id-\" + Math.random()}\n                            value={item.value}\n                            checked={checked}\n                            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                                return e.target.checked && onChange(e.target.value);\n                            }}\n                        />\n                        <Label htmlFor={\"for-\" + item.value}>\n                            {item.content}\n                        </Label>\n                    </div>\n                    );\n                })}\n            <Thumb css={{left: leftOffset}}></Thumb>\n        </Track>\n    )\n}\n  \nexport default Toggle;"]},"metadata":{},"sourceType":"module"}